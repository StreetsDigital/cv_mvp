version: '3.8'

services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/cv_automation
      - FASTAPI_URL=http://localhost:8000
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app/backend
      - ./integration:/app/integration
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WEBSOCKET_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    command: npm start
    depends_on:
      - api
    
  slack-app:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - FASTAPI_URL=http://api:8000
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./slack_app:/app/slack_app
    command: python -m slack_app.app
    
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=cv_automation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
